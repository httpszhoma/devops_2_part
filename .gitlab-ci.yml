stages:
  - build
  - deploy
  - api_test

# Стадия сборки
build:
  stage: build
  image: maven:latest   # Образ с Maven и OpenJDK
  script:
    - echo "Building backend..."
    - cd backend && mvn clean install -DskipTests # Сборка Spring Boot приложения
    - cd .. # Возвращаемся в корневую директорию
    - echo "Building frontend..."
    - cd frontend/simple_fullstack_project_frontend && npm install && npm run build # Сборка фронтенда
  artifacts:
    paths:
      - backend/target/demo-0.0.1-SNAPSHOT.jar
      - frontend/simple_fullstack_project_frontend/build
    expire_in: 1 hour

# Стадия деплоя
deploy:
  stage: deploy
  image: docker:stable
  services:
    - docker:dind # Для работы с Docker внутри CI/CD
  script:
    - echo "Deploying application..."
    - docker-compose up -d --build # Запуск Docker Compose
  only:
    - main # Выполняется только в ветке main

# Стадия тестирования API
api_test:
  stage: api_test
  image: curlimages/curl:latest
  script:
    - echo "Waiting for backend to be ready..."
    - sleep 15 # Ждем запуска приложения (рекомендуется использовать health-check)
    - |
      response=$(curl -X POST "http://localhost:8080/users" \
        -H "Content-Type: application/json" \
        -d '{"username": "newUser", "name": "New User", "email": "newuser@example.com"}')
      echo "Response: $response"
      if [[ "$response" != *"newUser"* ]]; then
        echo "Test failed: User was not created."
        exit 1
      else
        echo "Test passed: User created successfully."
      fi
