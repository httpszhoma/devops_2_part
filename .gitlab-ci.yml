stages:
  - build
  - deploy
  - api_test

# Стадия сборки
build:
  stage: build
  image: maven:3.8.6-jdk-17   # Образ с Maven и OpenJDK 17
  script:
    - echo "Building backend..."
    - mvn clean install -DskipTests # Сборка Spring Boot приложения (без тестов)
    - echo "Building frontend..."
    - cd frontend && npm install && npm run build # Сборка фронтенда
  artifacts:
    paths:
      - backend/target/demo-0.0.1-SNAPSHOT.jar
      - frontend/build
    expire_in: 1 hour

# Стадия деплоя
deploy:
  stage: deploy
  script:
    - echo "Deploying application..."
    - docker-compose -f docker-compose.yml up -d # Разворачиваем приложение с помощью Docker Compose
  only:
    - main  # Деплой только для main ветки

# Стадия для тестирования API через HTTP-запрос
api_test:
  stage: api_test
  image: curlimages/curl:latest # Используем образ с curl для выполнения запросов
  script:
    - |
      # Тестирование POST запроса с использованием curl
      response=$(curl -X POST "http://localhost:8080/users" \
        -H "Content-Type: application/json" \
        -d '{"username": "newUser", "name": "New User", "email": "newuser@example.com"}')
      echo "Response: $response"
      # Проверяем, что в ответе есть нужные значения
      if [[ "$response" != *"newUser"* ]]; then
        echo "Test failed: User was not created."
        exit 1
      else
        echo "Test passed: User created successfully."
      fi
